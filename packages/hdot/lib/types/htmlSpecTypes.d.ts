import { HTMLElement } from "../hdot";
import { DomTypeMap } from "./attributeTypes";
export declare type ElementMap = {
    "a": aElement;
    "abbr": abbrElement;
    "acronym": acronymElement;
    "address": addressElement;
    "applet": appletElement;
    "area": areaElement;
    "article": articleElement;
    "aside": asideElement;
    "audio": audioElement;
    "b": bElement;
    "base": baseElement;
    "basefont": basefontElement;
    "bdi": bdiElement;
    "bdo": bdoElement;
    "bgsound": bgsoundElement;
    "big": bigElement;
    "blink": blinkElement;
    "blockquote": blockquoteElement;
    "body": bodyElement;
    "br": brElement;
    "button": buttonElement;
    "canvas": canvasElement;
    "caption": captionElement;
    "center": centerElement;
    "cite": citeElement;
    "code": codeElement;
    "col": colElement;
    "colgroup": colgroupElement;
    "content": contentElement;
    "data": dataElement;
    "datalist": datalistElement;
    "dd": ddElement;
    "del": delElement;
    "details": detailsElement;
    "dfn": dfnElement;
    "dialog": dialogElement;
    "dir": dirElement;
    "div": divElement;
    "dl": dlElement;
    "dt": dtElement;
    "em": emElement;
    "embed": embedElement;
    "fieldset": fieldsetElement;
    "figcaption": figcaptionElement;
    "figure": figureElement;
    "font": fontElement;
    "footer": footerElement;
    "form": formElement;
    "frame": frameElement;
    "frameset": framesetElement;
    "h1": h1Element;
    "h2": h2Element;
    "h3": h3Element;
    "h4": h4Element;
    "h5": h5Element;
    "head": headElement;
    "header": headerElement;
    "hgroup": hgroupElement;
    "hr": hrElement;
    "html": htmlElement;
    "i": iElement;
    "iframe": iframeElement;
    "image": imageElement;
    "img": imgElement;
    "input": inputElement;
    "ins": insElement;
    "isindex": isindexElement;
    "kbd": kbdElement;
    "keygen": keygenElement;
    "label": labelElement;
    "legend": legendElement;
    "li": liElement;
    "link": linkElement;
    "listing": listingElement;
    "main": mainElement;
    "map": mapElement;
    "mark": markElement;
    "marquee": marqueeElement;
    "menu": menuElement;
    "menuitem": menuitemElement;
    "meta": metaElement;
    "meter": meterElement;
    "multicol": multicolElement;
    "nav": navElement;
    "nextid": nextidElement;
    "nobr": nobrElement;
    "noembed": noembedElement;
    "noframes": noframesElement;
    "noscript": noscriptElement;
    "object": objectElement;
    "ol": olElement;
    "optgroup": optgroupElement;
    "option": optionElement;
    "output": outputElement;
    "p": pElement;
    "param": paramElement;
    "picture": pictureElement;
    "plaintext": plaintextElement;
    "portal": portalElement;
    "pre": preElement;
    "progress": progressElement;
    "q": qElement;
    "rb": rbElement;
    "rp": rpElement;
    "rt": rtElement;
    "rtc": rtcElement;
    "ruby": rubyElement;
    "s": sElement;
    "samp": sampElement;
    "script": scriptElement;
    "section": sectionElement;
    "select": selectElement;
    "shadow": shadowElement;
    "slot": slotElement;
    "small": smallElement;
    "source": sourceElement;
    "spacer": spacerElement;
    "span": spanElement;
    "strike": strikeElement;
    "strong": strongElement;
    "style": styleElement;
    "sub": subElement;
    "summary": summaryElement;
    "sup": supElement;
    "table": tableElement;
    "tbody": tbodyElement;
    "td": tdElement;
    "template": templateElement;
    "textarea": textareaElement;
    "tfoot": tfootElement;
    "th": thElement;
    "thead": theadElement;
    "time": timeElement;
    "title": titleElement;
    "tr": trElement;
    "track": trackElement;
    "tt": ttElement;
    "u": uElement;
    "ul": ulElement;
    "var": varElement;
    "video": videoElement;
    "wbr": wbrElement;
    "xmp": xmpElement;
};
declare type aElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"a">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"a">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"a">;
    "charset": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"a">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"a">;
    "coords": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"a">;
    "download": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "draggable": (val: "true" | "false") => HTMLElement<"a">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"a">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"a">;
    "href": (val: DomTypeMap["URL"]) => HTMLElement<"a">;
    "hreflang": (val: DomTypeMap["BCP47"]) => HTMLElement<"a">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"a">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"a">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"a">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"a">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"a">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"a">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"a">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"a">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"a">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"a">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "ping": (val: DomTypeMap[`{"token":"HTTPSchemaURL","separator":"space"}`]) => HTMLElement<"a">;
    "referrerpolicy": (val: "" | "no-referrer" | "no-referrer-when-downgrade" | "same-origin" | "origin" | "strict-origin" | "origin-when-cross-origin" | "strict-origin-when-cross-origin" | "unsafe-url") => HTMLElement<"a">;
    "rel": (val: DomTypeMap[`{"token":{"enum":["alternate","author","bookmark","external","help","license","next","nofollow","noopener","noreferrer","opener","prev","search","tag"]},"unique":true,"separator":"space"}`]) => HTMLElement<"a">;
    "rev": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"a">;
    "shape": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"a">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"a">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"a">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"a">;
    "target": (val: DomTypeMap["BrowsingContextNameOrKeyword"]) => HTMLElement<"a">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"a">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"a">;
    "type": (val: DomTypeMap["MIMEType"]) => HTMLElement<"a">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"a">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"a">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"a">;
    allowedChildren: any;
};
declare type abbrElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"abbr">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"abbr">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"abbr">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"abbr">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"abbr">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"abbr">;
    "draggable": (val: "true" | "false") => HTMLElement<"abbr">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"abbr">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"abbr">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"abbr">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"abbr">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"abbr">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"abbr">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"abbr">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"abbr">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"abbr">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"abbr">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"abbr">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"abbr">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"abbr">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"abbr">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"abbr">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"abbr">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"abbr">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"abbr">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"abbr">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"abbr">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"abbr">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"abbr">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"abbr">;
    allowedChildren: any;
};
declare type acronymElement = {
    allowedChildren: any;
};
declare type addressElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"address">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"address">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"address">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"address">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"address">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"address">;
    "draggable": (val: "true" | "false") => HTMLElement<"address">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"address">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"address">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"address">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"address">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"address">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"address">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"address">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"address">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"address">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"address">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"address">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"address">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"address">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"address">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"address">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"address">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"address">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"address">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"address">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"address">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"address">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"address">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"address">;
    allowedChildren: any;
};
declare type appletElement = {
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "alt": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "archive": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "code": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "codebase": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "datafld": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "datasrc": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "height": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "hspace": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "mayscript": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "object": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "src": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "vspace": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"applet">;
    allowedChildren: any;
};
declare type areaElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"area">;
    "alt": (val: DomTypeMap["Any"]) => HTMLElement<"area">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"area">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"area">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"area">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"area">;
    "coords": (val: DomTypeMap[`{"token":"Number","disallowToSurroundBySpaces":true,"separator":"comma"}`]) => HTMLElement<"area">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"area">;
    "download": (val: DomTypeMap["Any"]) => HTMLElement<"area">;
    "draggable": (val: "true" | "false") => HTMLElement<"area">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"area">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"area">;
    "href": (val: DomTypeMap["URL"]) => HTMLElement<"area">;
    "hreflang": (val: DomTypeMap["BCP47"]) => HTMLElement<"area">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"area">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"area">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"area">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"area">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"area">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"area">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"area">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"area">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"area">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"area">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"area">;
    "nohref": (val: DomTypeMap["Any"]) => HTMLElement<"area">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"area">;
    "ping": (val: DomTypeMap[`{"token":"HTTPSchemaURL","separator":"space"}`]) => HTMLElement<"area">;
    "referrerpolicy": (val: "" | "no-referrer" | "no-referrer-when-downgrade" | "same-origin" | "origin" | "strict-origin" | "origin-when-cross-origin" | "strict-origin-when-cross-origin" | "unsafe-url") => HTMLElement<"area">;
    "rel": (val: DomTypeMap[`{"token":{"enum":["alternate","author","bookmark","external","help","license","next","nofollow","noopener","noreferrer","opener","prev","search","tag"]},"unique":true,"separator":"space"}`]) => HTMLElement<"area">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"area">;
    "shape": (val: "rect" | "circle" | "poly" | "default") => HTMLElement<"area">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"area">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"area">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"area">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"area">;
    "target": (val: DomTypeMap["BrowsingContextNameOrKeyword"]) => HTMLElement<"area">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"area">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"area">;
    "type": (val: DomTypeMap["MIMEType"]) => HTMLElement<"area">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"area">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"area">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"area">;
    allowedChildren: any;
};
declare type articleElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"article">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"article">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"article">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"article">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"article">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"article">;
    "draggable": (val: "true" | "false") => HTMLElement<"article">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"article">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"article">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"article">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"article">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"article">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"article">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"article">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"article">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"article">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"article">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"article">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"article">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"article">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"article">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"article">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"article">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"article">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"article">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"article">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"article">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"article">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"article">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"article">;
    allowedChildren: any;
};
declare type asideElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"aside">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"aside">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"aside">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"aside">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"aside">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"aside">;
    "draggable": (val: "true" | "false") => HTMLElement<"aside">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"aside">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"aside">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"aside">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"aside">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"aside">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"aside">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"aside">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"aside">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"aside">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"aside">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"aside">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"aside">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"aside">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"aside">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"aside">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"aside">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"aside">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"aside">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"aside">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"aside">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"aside">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"aside">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"aside">;
    allowedChildren: any;
};
declare type audioElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"audio">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"audio">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "autoplay": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"audio">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"audio">;
    "controls": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "crossorigin": (val: "" | "anonymous" | "use-credentials") => HTMLElement<"audio">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"audio">;
    "disableremoteplayback": (val: DomTypeMap["Any"]) => HTMLElement<"audio">;
    "draggable": (val: "true" | "false") => HTMLElement<"audio">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"audio">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"audio">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"audio">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"audio">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"audio">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"audio">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"audio">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"audio">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"audio">;
    "loop": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "muted": (val: DomTypeMap["Boolean"]) => HTMLElement<"audio">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"audio">;
    "preload": (val: "none" | "metadata" | "auto") => HTMLElement<"audio">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"audio">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"audio">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"audio">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"audio">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"audio">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"audio">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"audio">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"audio">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"audio">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"audio">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"audio">;
    allowedChildren: any;
};
declare type bElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"b">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"b">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"b">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"b">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"b">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"b">;
    "draggable": (val: "true" | "false") => HTMLElement<"b">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"b">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"b">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"b">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"b">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"b">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"b">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"b">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"b">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"b">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"b">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"b">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"b">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"b">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"b">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"b">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"b">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"b">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"b">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"b">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"b">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"b">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"b">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"b">;
    allowedChildren: any;
};
declare type baseElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"base">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"base">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"base">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"base">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"base">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"base">;
    "draggable": (val: "true" | "false") => HTMLElement<"base">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"base">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"base">;
    "href": (val: DomTypeMap["URL"]) => HTMLElement<"base">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"base">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"base">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"base">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"base">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"base">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"base">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"base">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"base">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"base">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"base">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"base">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"base">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"base">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"base">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"base">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"base">;
    "target": (val: DomTypeMap["BrowsingContextNameOrKeyword"]) => HTMLElement<"base">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"base">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"base">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"base">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"base">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"base">;
    allowedChildren: any;
};
declare type basefontElement = {
    "color": (val: DomTypeMap["Any"]) => HTMLElement<"basefont">;
    "face": (val: DomTypeMap["Any"]) => HTMLElement<"basefont">;
    "size": (val: DomTypeMap["Any"]) => HTMLElement<"basefont">;
    allowedChildren: any;
};
declare type bdiElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"bdi">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"bdi">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdi">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"bdi">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"bdi">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"bdi">;
    "draggable": (val: "true" | "false") => HTMLElement<"bdi">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"bdi">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdi">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"bdi">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdi">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"bdi">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"bdi">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"bdi">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"bdi">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"bdi">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdi">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"bdi">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"bdi">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"bdi">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"bdi">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"bdi">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"bdi">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"bdi">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"bdi">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"bdi">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"bdi">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"bdi">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"bdi">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"bdi">;
    allowedChildren: any;
};
declare type bdoElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"bdo">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"bdo">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdo">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"bdo">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"bdo">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"bdo">;
    "draggable": (val: "true" | "false") => HTMLElement<"bdo">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"bdo">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdo">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"bdo">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdo">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"bdo">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"bdo">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"bdo">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"bdo">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"bdo">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"bdo">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"bdo">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"bdo">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"bdo">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"bdo">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"bdo">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"bdo">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"bdo">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"bdo">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"bdo">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"bdo">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"bdo">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"bdo">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"bdo">;
    allowedChildren: any;
};
declare type bgsoundElement = {
    "balance": (val: DomTypeMap["Any"]) => HTMLElement<"bgsound">;
    "loop": (val: DomTypeMap["Any"]) => HTMLElement<"bgsound">;
    "src": (val: DomTypeMap["Any"]) => HTMLElement<"bgsound">;
    "volume": (val: DomTypeMap["Any"]) => HTMLElement<"bgsound">;
    allowedChildren: any;
};
declare type bigElement = {
    allowedChildren: any;
};
declare type blinkElement = {
    allowedChildren: any;
};
declare type blockquoteElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"blockquote">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"blockquote">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"blockquote">;
    "cite": (val: DomTypeMap["URL"]) => HTMLElement<"blockquote">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"blockquote">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"blockquote">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"blockquote">;
    "draggable": (val: "true" | "false") => HTMLElement<"blockquote">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"blockquote">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"blockquote">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"blockquote">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"blockquote">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"blockquote">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"blockquote">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"blockquote">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"blockquote">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"blockquote">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"blockquote">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"blockquote">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"blockquote">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"blockquote">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"blockquote">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"blockquote">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"blockquote">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"blockquote">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"blockquote">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"blockquote">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"blockquote">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"blockquote">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"blockquote">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"blockquote">;
    allowedChildren: any;
};
declare type bodyElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"body">;
    "alink": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"body">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"body">;
    "background": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "bottommargin": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"body">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"body">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"body">;
    "draggable": (val: "true" | "false") => HTMLElement<"body">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"body">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"body">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"body">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"body">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"body">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"body">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"body">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"body">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"body">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"body">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"body">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"body">;
    "leftmargin": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "link": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "onredo": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "onundo": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "rightmargin": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"body">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"body">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"body">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"body">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"body">;
    "text": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "topmargin": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"body">;
    "vlink": (val: DomTypeMap["Any"]) => HTMLElement<"body">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"body">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"body">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"body">;
    allowedChildren: any;
};
declare type brElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"br">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"br">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"br">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"br">;
    "clear": (val: DomTypeMap["Any"]) => HTMLElement<"br">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"br">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"br">;
    "draggable": (val: "true" | "false") => HTMLElement<"br">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"br">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"br">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"br">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"br">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"br">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"br">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"br">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"br">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"br">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"br">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"br">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"br">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"br">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"br">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"br">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"br">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"br">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"br">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"br">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"br">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"br">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"br">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"br">;
    allowedChildren: any;
};
declare type buttonElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"button">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"button">;
    "autocomplete": (val: DomTypeMap["Any"]) => HTMLElement<"button">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"button">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"button">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"button">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"button">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"button">;
    "draggable": (val: "true" | "false") => HTMLElement<"button">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"button">;
    "form": (val: DomTypeMap["DOMID"]) => HTMLElement<"button">;
    "formaction": (val: DomTypeMap["URL"]) => HTMLElement<"button">;
    "formenctype": (val: "application/x-www-form-urlencoded" | "multipart/form-data" | "text/plain") => HTMLElement<"button">;
    "formmethod": (val: "post" | "get" | "dialog") => HTMLElement<"button">;
    "formnovalidate": (val: DomTypeMap["Boolean"]) => HTMLElement<"button">;
    "formtarget": (val: DomTypeMap["BrowsingContextNameOrKeyword"]) => HTMLElement<"button">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"button">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"button">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"button">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"button">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"button">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"button">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"button">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"button">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"button">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"button">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"button">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"button">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"button">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"button">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"button">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"button">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"button">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"button">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"button">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"button">;
    "type": (val: "submit" | "reset" | "button") => HTMLElement<"button">;
    "value": (val: DomTypeMap["Any"]) => HTMLElement<"button">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"button">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"button">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"button">;
    allowedChildren: any;
};
declare type canvasElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"canvas">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"canvas">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"canvas">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"canvas">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"canvas">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"canvas">;
    "draggable": (val: "true" | "false") => HTMLElement<"canvas">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"canvas">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"canvas">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"canvas">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"canvas">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"canvas">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"canvas">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"canvas">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"canvas">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"canvas">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"canvas">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"canvas">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"canvas">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"canvas">;
    "moz-opaque": (val: DomTypeMap["Any"]) => HTMLElement<"canvas">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"canvas">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"canvas">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"canvas">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"canvas">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"canvas">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"canvas">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"canvas">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"canvas">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"canvas">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"canvas">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"canvas">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"canvas">;
    allowedChildren: any;
};
declare type captionElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"caption">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"caption">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"caption">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"caption">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"caption">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"caption">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"caption">;
    "draggable": (val: "true" | "false") => HTMLElement<"caption">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"caption">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"caption">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"caption">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"caption">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"caption">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"caption">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"caption">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"caption">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"caption">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"caption">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"caption">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"caption">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"caption">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"caption">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"caption">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"caption">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"caption">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"caption">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"caption">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"caption">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"caption">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"caption">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"caption">;
    allowedChildren: any;
};
declare type centerElement = {
    allowedChildren: any;
};
declare type citeElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"cite">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"cite">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"cite">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"cite">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"cite">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"cite">;
    "draggable": (val: "true" | "false") => HTMLElement<"cite">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"cite">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"cite">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"cite">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"cite">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"cite">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"cite">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"cite">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"cite">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"cite">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"cite">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"cite">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"cite">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"cite">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"cite">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"cite">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"cite">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"cite">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"cite">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"cite">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"cite">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"cite">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"cite">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"cite">;
    allowedChildren: any;
};
declare type codeElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"code">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"code">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"code">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"code">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"code">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"code">;
    "draggable": (val: "true" | "false") => HTMLElement<"code">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"code">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"code">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"code">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"code">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"code">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"code">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"code">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"code">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"code">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"code">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"code">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"code">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"code">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"code">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"code">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"code">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"code">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"code">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"code">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"code">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"code">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"code">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"code">;
    allowedChildren: any;
};
declare type colElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"col">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"col">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"col">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"col">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"col">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"col">;
    "draggable": (val: "true" | "false") => HTMLElement<"col">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"col">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"col">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"col">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"col">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"col">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"col">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"col">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"col">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"col">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"col">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"col">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"col">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"col">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"col">;
    "span": (val: DomTypeMap[`{"type":"integer","gt":0,"lte":1000,"clampable":true}`]) => HTMLElement<"col">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"col">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"col">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"col">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"col">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"col">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"col">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"col">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"col">;
    allowedChildren: any;
};
declare type colgroupElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"colgroup">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"colgroup">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"colgroup">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"colgroup">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"colgroup">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"colgroup">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"colgroup">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"colgroup">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"colgroup">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"colgroup">;
    "draggable": (val: "true" | "false") => HTMLElement<"colgroup">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"colgroup">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"colgroup">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"colgroup">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"colgroup">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"colgroup">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"colgroup">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"colgroup">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"colgroup">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"colgroup">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"colgroup">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"colgroup">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"colgroup">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"colgroup">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"colgroup">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"colgroup">;
    "span": (val: DomTypeMap[`{"type":"integer","gt":0,"lte":1000,"clampable":true}`]) => HTMLElement<"colgroup">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"colgroup">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"colgroup">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"colgroup">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"colgroup">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"colgroup">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"colgroup">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"colgroup">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"colgroup">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"colgroup">;
    allowedChildren: any;
};
declare type contentElement = {
    "select": (val: DomTypeMap["Any"]) => HTMLElement<"content">;
    allowedChildren: any;
};
declare type dataElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"data">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"data">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"data">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"data">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"data">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"data">;
    "draggable": (val: "true" | "false") => HTMLElement<"data">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"data">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"data">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"data">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"data">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"data">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"data">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"data">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"data">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"data">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"data">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"data">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"data">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"data">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"data">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"data">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"data">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"data">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"data">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"data">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"data">;
    "value": (val: DomTypeMap["Any"]) => HTMLElement<"data">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"data">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"data">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"data">;
    allowedChildren: any;
};
declare type datalistElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"datalist">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"datalist">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"datalist">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"datalist">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"datalist">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"datalist">;
    "draggable": (val: "true" | "false") => HTMLElement<"datalist">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"datalist">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"datalist">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"datalist">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"datalist">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"datalist">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"datalist">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"datalist">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"datalist">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"datalist">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"datalist">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"datalist">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"datalist">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"datalist">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"datalist">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"datalist">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"datalist">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"datalist">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"datalist">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"datalist">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"datalist">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"datalist">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"datalist">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"datalist">;
    allowedChildren: any;
};
declare type ddElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"dd">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"dd">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"dd">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"dd">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"dd">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"dd">;
    "draggable": (val: "true" | "false") => HTMLElement<"dd">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"dd">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"dd">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"dd">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"dd">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"dd">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"dd">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"dd">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dd">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"dd">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"dd">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dd">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dd">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"dd">;
    "nowrap": (val: DomTypeMap["Any"]) => HTMLElement<"dd">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"dd">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"dd">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"dd">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"dd">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"dd">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"dd">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"dd">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dd">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"dd">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"dd">;
    allowedChildren: any;
};
declare type delElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"del">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"del">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"del">;
    "cite": (val: DomTypeMap["URL"]) => HTMLElement<"del">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"del">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"del">;
    "datetime": (val: DomTypeMap["DateTime"]) => HTMLElement<"del">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"del">;
    "draggable": (val: "true" | "false") => HTMLElement<"del">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"del">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"del">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"del">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"del">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"del">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"del">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"del">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"del">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"del">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"del">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"del">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"del">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"del">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"del">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"del">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"del">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"del">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"del">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"del">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"del">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"del">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"del">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"del">;
    allowedChildren: any;
};
declare type detailsElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"details">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"details">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"details">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"details">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"details">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"details">;
    "draggable": (val: "true" | "false") => HTMLElement<"details">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"details">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"details">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"details">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"details">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"details">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"details">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"details">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"details">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"details">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"details">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"details">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"details">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"details">;
    "open": (val: DomTypeMap["Boolean"]) => HTMLElement<"details">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"details">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"details">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"details">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"details">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"details">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"details">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"details">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"details">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"details">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"details">;
    allowedChildren: any;
};
declare type dfnElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"dfn">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"dfn">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"dfn">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"dfn">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"dfn">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"dfn">;
    "draggable": (val: "true" | "false") => HTMLElement<"dfn">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"dfn">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"dfn">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"dfn">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"dfn">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"dfn">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"dfn">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"dfn">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dfn">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"dfn">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"dfn">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dfn">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dfn">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"dfn">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"dfn">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"dfn">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"dfn">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"dfn">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"dfn">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"dfn">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"dfn">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dfn">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"dfn">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"dfn">;
    allowedChildren: any;
};
declare type dialogElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"dialog">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"dialog">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"dialog">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"dialog">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"dialog">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"dialog">;
    "draggable": (val: "true" | "false") => HTMLElement<"dialog">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"dialog">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"dialog">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"dialog">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"dialog">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"dialog">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"dialog">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"dialog">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dialog">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"dialog">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"dialog">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dialog">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dialog">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"dialog">;
    "open": (val: DomTypeMap["Boolean"]) => HTMLElement<"dialog">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"dialog">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"dialog">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"dialog">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"dialog">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"dialog">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"dialog">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"dialog">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dialog">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"dialog">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"dialog">;
    allowedChildren: any;
};
declare type dirElement = {
    "compact": (val: DomTypeMap["Any"]) => HTMLElement<"dir">;
    allowedChildren: any;
};
declare type divElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"div">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"div">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"div">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"div">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"div">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"div">;
    "draggable": (val: "true" | "false") => HTMLElement<"div">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"div">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"div">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"div">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"div">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"div">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"div">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"div">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"div">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"div">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"div">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"div">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"div">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"div">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"div">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"div">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"div">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"div">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"div">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"div">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"div">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"div">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"div">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"div">;
    allowedChildren: any;
};
declare type dlElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"dl">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"dl">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"dl">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"dl">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"dl">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"dl">;
    "draggable": (val: "true" | "false") => HTMLElement<"dl">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"dl">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"dl">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"dl">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"dl">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"dl">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"dl">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"dl">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dl">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"dl">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"dl">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dl">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dl">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"dl">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"dl">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"dl">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"dl">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"dl">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"dl">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"dl">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"dl">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dl">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"dl">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"dl">;
    allowedChildren: any;
};
declare type dtElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"dt">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"dt">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"dt">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"dt">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"dt">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"dt">;
    "draggable": (val: "true" | "false") => HTMLElement<"dt">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"dt">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"dt">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"dt">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"dt">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"dt">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"dt">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"dt">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dt">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"dt">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"dt">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"dt">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dt">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"dt">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"dt">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"dt">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"dt">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"dt">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"dt">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"dt">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"dt">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"dt">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"dt">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"dt">;
    allowedChildren: any;
};
declare type emElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"em">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"em">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"em">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"em">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"em">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"em">;
    "draggable": (val: "true" | "false") => HTMLElement<"em">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"em">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"em">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"em">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"em">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"em">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"em">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"em">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"em">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"em">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"em">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"em">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"em">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"em">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"em">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"em">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"em">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"em">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"em">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"em">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"em">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"em">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"em">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"em">;
    allowedChildren: any;
};
declare type embedElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"embed">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"embed">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"embed">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"embed">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"embed">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"embed">;
    "draggable": (val: "true" | "false") => HTMLElement<"embed">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"embed">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"embed">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"embed">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"embed">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"embed">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"embed">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"embed">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"embed">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"embed">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"embed">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"embed">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"embed">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"embed">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"embed">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"embed">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"embed">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"embed">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"embed">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"embed">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"embed">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"embed">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"embed">;
    "type": (val: DomTypeMap["MIMEType"]) => HTMLElement<"embed">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"embed">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"embed">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"embed">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"embed">;
    allowedChildren: any;
};
declare type fieldsetElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"fieldset">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"fieldset">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"fieldset">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"fieldset">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"fieldset">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"fieldset">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"fieldset">;
    "draggable": (val: "true" | "false") => HTMLElement<"fieldset">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"fieldset">;
    "form": (val: DomTypeMap["DOMID"]) => HTMLElement<"fieldset">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"fieldset">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"fieldset">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"fieldset">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"fieldset">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"fieldset">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"fieldset">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"fieldset">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"fieldset">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"fieldset">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"fieldset">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"fieldset">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"fieldset">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"fieldset">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"fieldset">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"fieldset">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"fieldset">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"fieldset">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"fieldset">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"fieldset">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"fieldset">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"fieldset">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"fieldset">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"fieldset">;
    allowedChildren: any;
};
declare type figcaptionElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"figcaption">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"figcaption">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"figcaption">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"figcaption">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"figcaption">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"figcaption">;
    "draggable": (val: "true" | "false") => HTMLElement<"figcaption">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"figcaption">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"figcaption">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"figcaption">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"figcaption">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"figcaption">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"figcaption">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"figcaption">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"figcaption">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"figcaption">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"figcaption">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"figcaption">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"figcaption">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"figcaption">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"figcaption">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"figcaption">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"figcaption">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"figcaption">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"figcaption">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"figcaption">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"figcaption">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"figcaption">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"figcaption">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"figcaption">;
    allowedChildren: any;
};
declare type figureElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"figure">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"figure">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"figure">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"figure">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"figure">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"figure">;
    "draggable": (val: "true" | "false") => HTMLElement<"figure">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"figure">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"figure">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"figure">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"figure">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"figure">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"figure">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"figure">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"figure">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"figure">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"figure">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"figure">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"figure">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"figure">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"figure">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"figure">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"figure">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"figure">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"figure">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"figure">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"figure">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"figure">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"figure">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"figure">;
    allowedChildren: any;
};
declare type fontElement = {
    "color": (val: DomTypeMap["Any"]) => HTMLElement<"font">;
    "face": (val: DomTypeMap["Any"]) => HTMLElement<"font">;
    "size": (val: DomTypeMap["Any"]) => HTMLElement<"font">;
    allowedChildren: any;
};
declare type footerElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"footer">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"footer">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"footer">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"footer">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"footer">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"footer">;
    "draggable": (val: "true" | "false") => HTMLElement<"footer">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"footer">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"footer">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"footer">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"footer">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"footer">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"footer">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"footer">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"footer">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"footer">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"footer">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"footer">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"footer">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"footer">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"footer">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"footer">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"footer">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"footer">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"footer">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"footer">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"footer">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"footer">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"footer">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"footer">;
    allowedChildren: any;
};
declare type formElement = {
    "accept": (val: DomTypeMap["Any"]) => HTMLElement<"form">;
    "accept-charset": (val: "utf-8") => HTMLElement<"form">;
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"form">;
    "action": (val: DomTypeMap["URL"]) => HTMLElement<"form">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"form">;
    "autocomplete": (val: "on" | "off") => HTMLElement<"form">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"form">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"form">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"form">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"form">;
    "draggable": (val: "true" | "false") => HTMLElement<"form">;
    "enctype": (val: "application/x-www-form-urlencoded" | "multipart/form-data" | "text/plain") => HTMLElement<"form">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"form">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"form">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"form">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"form">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"form">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"form">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"form">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"form">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"form">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"form">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"form">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"form">;
    "method": (val: "post" | "get" | "dialog") => HTMLElement<"form">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"form">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"form">;
    "novalidate": (val: DomTypeMap["Boolean"]) => HTMLElement<"form">;
    "rel": (val: DomTypeMap[`{"token":{"enum":["external","help","license","next","nofollow","noopener","noreferrer","opener","prev","search"]},"unique":true,"separator":"space"}`]) => HTMLElement<"form">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"form">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"form">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"form">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"form">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"form">;
    "target": (val: DomTypeMap["Target"]) => HTMLElement<"form">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"form">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"form">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"form">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"form">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"form">;
    allowedChildren: any;
};
declare type frameElement = {
    "frameborder": (val: DomTypeMap["Any"]) => HTMLElement<"frame">;
    "marginheight": (val: DomTypeMap["Any"]) => HTMLElement<"frame">;
    "marginwidth": (val: DomTypeMap["Any"]) => HTMLElement<"frame">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"frame">;
    "noresize": (val: DomTypeMap["Any"]) => HTMLElement<"frame">;
    "scrolling": (val: DomTypeMap["Any"]) => HTMLElement<"frame">;
    "src": (val: DomTypeMap["Any"]) => HTMLElement<"frame">;
    allowedChildren: any;
};
declare type framesetElement = {
    "cols": (val: DomTypeMap["Any"]) => HTMLElement<"frameset">;
    "rows": (val: DomTypeMap["Any"]) => HTMLElement<"frameset">;
    allowedChildren: any;
};
declare type h1Element = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"h1">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"h1">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"h1">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"h1">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"h1">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"h1">;
    "draggable": (val: "true" | "false") => HTMLElement<"h1">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"h1">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"h1">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"h1">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"h1">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"h1">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"h1">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"h1">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h1">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"h1">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"h1">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h1">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h1">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"h1">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"h1">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"h1">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"h1">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"h1">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"h1">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"h1">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"h1">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h1">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"h1">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"h1">;
    allowedChildren: any;
};
declare type h2Element = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"h2">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"h2">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"h2">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"h2">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"h2">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"h2">;
    "draggable": (val: "true" | "false") => HTMLElement<"h2">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"h2">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"h2">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"h2">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"h2">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"h2">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"h2">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"h2">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h2">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"h2">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"h2">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h2">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h2">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"h2">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"h2">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"h2">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"h2">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"h2">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"h2">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"h2">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"h2">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h2">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"h2">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"h2">;
    allowedChildren: any;
};
declare type h3Element = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"h3">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"h3">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"h3">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"h3">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"h3">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"h3">;
    "draggable": (val: "true" | "false") => HTMLElement<"h3">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"h3">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"h3">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"h3">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"h3">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"h3">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"h3">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"h3">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h3">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"h3">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"h3">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h3">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h3">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"h3">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"h3">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"h3">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"h3">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"h3">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"h3">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"h3">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"h3">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h3">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"h3">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"h3">;
    allowedChildren: any;
};
declare type h4Element = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"h4">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"h4">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"h4">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"h4">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"h4">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"h4">;
    "draggable": (val: "true" | "false") => HTMLElement<"h4">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"h4">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"h4">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"h4">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"h4">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"h4">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"h4">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"h4">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h4">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"h4">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"h4">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h4">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h4">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"h4">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"h4">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"h4">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"h4">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"h4">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"h4">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"h4">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"h4">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h4">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"h4">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"h4">;
    allowedChildren: any;
};
declare type h5Element = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"h5">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"h5">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"h5">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"h5">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"h5">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"h5">;
    "draggable": (val: "true" | "false") => HTMLElement<"h5">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"h5">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"h5">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"h5">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"h5">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"h5">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"h5">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"h5">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h5">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"h5">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"h5">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"h5">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h5">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"h5">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"h5">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"h5">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"h5">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"h5">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"h5">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"h5">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"h5">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"h5">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"h5">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"h5">;
    allowedChildren: any;
};
declare type headElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"head">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"head">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"head">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"head">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"head">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"head">;
    "draggable": (val: "true" | "false") => HTMLElement<"head">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"head">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"head">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"head">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"head">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"head">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"head">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"head">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"head">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"head">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"head">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"head">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"head">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"head">;
    "profile": (val: DomTypeMap["Any"]) => HTMLElement<"head">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"head">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"head">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"head">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"head">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"head">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"head">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"head">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"head">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"head">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"head">;
    allowedChildren: any;
};
declare type headerElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"header">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"header">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"header">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"header">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"header">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"header">;
    "draggable": (val: "true" | "false") => HTMLElement<"header">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"header">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"header">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"header">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"header">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"header">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"header">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"header">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"header">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"header">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"header">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"header">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"header">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"header">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"header">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"header">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"header">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"header">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"header">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"header">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"header">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"header">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"header">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"header">;
    allowedChildren: any;
};
declare type hgroupElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"hgroup">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"hgroup">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"hgroup">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"hgroup">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"hgroup">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"hgroup">;
    "draggable": (val: "true" | "false") => HTMLElement<"hgroup">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"hgroup">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"hgroup">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"hgroup">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"hgroup">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"hgroup">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"hgroup">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"hgroup">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"hgroup">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"hgroup">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"hgroup">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"hgroup">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"hgroup">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"hgroup">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"hgroup">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"hgroup">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"hgroup">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"hgroup">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"hgroup">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"hgroup">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"hgroup">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"hgroup">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"hgroup">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"hgroup">;
    allowedChildren: any;
};
declare type hrElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"hr">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"hr">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"hr">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"hr">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"hr">;
    "color": (val: DomTypeMap["Any"]) => HTMLElement<"hr">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"hr">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"hr">;
    "draggable": (val: "true" | "false") => HTMLElement<"hr">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"hr">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"hr">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"hr">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"hr">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"hr">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"hr">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"hr">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"hr">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"hr">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"hr">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"hr">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"hr">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"hr">;
    "noshade": (val: DomTypeMap["Any"]) => HTMLElement<"hr">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"hr">;
    "size": (val: DomTypeMap["Any"]) => HTMLElement<"hr">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"hr">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"hr">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"hr">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"hr">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"hr">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"hr">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"hr">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"hr">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"hr">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"hr">;
    allowedChildren: any;
};
declare type htmlElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"html">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"html">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"html">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"html">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"html">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"html">;
    "draggable": (val: "true" | "false") => HTMLElement<"html">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"html">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"html">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"html">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"html">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"html">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"html">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"html">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"html">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"html">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"html">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"html">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"html">;
    "manifest": (val: DomTypeMap["Any"]) => HTMLElement<"html">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"html">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"html">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"html">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"html">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"html">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"html">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"html">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"html">;
    "version": (val: DomTypeMap["Any"]) => HTMLElement<"html">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"html">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"html">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"html">;
    allowedChildren: any;
};
declare type iElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"i">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"i">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"i">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"i">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"i">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"i">;
    "draggable": (val: "true" | "false") => HTMLElement<"i">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"i">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"i">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"i">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"i">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"i">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"i">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"i">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"i">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"i">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"i">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"i">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"i">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"i">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"i">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"i">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"i">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"i">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"i">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"i">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"i">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"i">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"i">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"i">;
    allowedChildren: any;
};
declare type iframeElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"iframe">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "allow": (val: DomTypeMap["SerializedPermissionsPolicy"]) => HTMLElement<"iframe">;
    "allowfullscreen": (val: DomTypeMap["Boolean"]) => HTMLElement<"iframe">;
    "allowpaymentrequest": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"iframe">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"iframe">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"iframe">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"iframe">;
    "csp": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"iframe">;
    "draggable": (val: "true" | "false") => HTMLElement<"iframe">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"iframe">;
    "frameborder": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"iframe">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"iframe">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"iframe">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"iframe">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"iframe">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"iframe">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"iframe">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"iframe">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"iframe">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"iframe">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"iframe">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"iframe">;
    "loading": (val: "lazy" | "eager") => HTMLElement<"iframe">;
    "longdesc": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "marginheight": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "marginwidth": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "name": (val: DomTypeMap["BrowsingContextName"]) => HTMLElement<"iframe">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "referrerpolicy": (val: "" | "no-referrer" | "no-referrer-when-downgrade" | "same-origin" | "origin" | "strict-origin" | "origin-when-cross-origin" | "strict-origin-when-cross-origin" | "unsafe-url") => HTMLElement<"iframe">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"iframe">;
    "sandbox": (val: DomTypeMap[`{"token":{"enum":["allow-forms","allow-modals","allow-orientation-lock","allow-pointer-lock","allow-popups","allow-popups-to-escape-sandbox","allow-presentation","allow-same-origin","allow-scripts","allow-top-navigation","allow-top-navigation-by-user-activation","allow-downloads","allow-custom-protocols-navigation"]},"caseInsensitive":true,"ordered":true,"unique":true,"separator":"space"}`]) => HTMLElement<"iframe">;
    "scrolling": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"iframe">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"iframe">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"iframe">;
    "srcdoc": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"iframe">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"iframe">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"iframe">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"iframe">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"iframe">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"iframe">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"iframe">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"iframe">;
    allowedChildren: any;
};
declare type imageElement = {
    allowedChildren: any;
};
declare type imgElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"img">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "alt": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"img">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"img">;
    "border": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"img">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"img">;
    "crossorigin": (val: "" | "anonymous" | "use-credentials") => HTMLElement<"img">;
    "decoding": (val: "sync" | "async" | "auto") => HTMLElement<"img">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"img">;
    "draggable": (val: "true" | "false") => HTMLElement<"img">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"img">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"img">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"img">;
    "hspace": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"img">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"img">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"img">;
    "intrinsicsize": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"img">;
    "ismap": (val: DomTypeMap["Boolean"]) => HTMLElement<"img">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"img">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"img">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"img">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"img">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"img">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"img">;
    "loading": (val: "lazy" | "eager") => HTMLElement<"img">;
    "longdesc": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "referrerpolicy": (val: "" | "no-referrer" | "no-referrer-when-downgrade" | "same-origin" | "origin" | "strict-origin" | "origin-when-cross-origin" | "strict-origin-when-cross-origin" | "unsafe-url") => HTMLElement<"img">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"img">;
    "sizes": (val: DomTypeMap["SourceSizeList"]) => HTMLElement<"img">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"img">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"img">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"img">;
    "srcset": (val: DomTypeMap["Srcset"]) => HTMLElement<"img">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"img">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"img">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"img">;
    "usemap": (val: DomTypeMap["HashName"]) => HTMLElement<"img">;
    "vspace": (val: DomTypeMap["Any"]) => HTMLElement<"img">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"img">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"img">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"img">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"img">;
    allowedChildren: any;
};
declare type inputElement = {
    "accept": (val: DomTypeMap[`{"token":"Accept","caseInsensitive":true,"unique":true,"separator":"comma"}`]) => HTMLElement<"input">;
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"input">;
    "alt": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"input">;
    "autocomplete": (val: DomTypeMap["AutoComplete"]) => HTMLElement<"input">;
    "autocorrect": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "capture": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "checked": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"input">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"input">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"input">;
    "dirname": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"input">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "draggable": (val: "true" | "false") => HTMLElement<"input">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"input">;
    "form": (val: DomTypeMap["DOMID"]) => HTMLElement<"input">;
    "formaction": (val: DomTypeMap["URL"]) => HTMLElement<"input">;
    "formenctype": (val: "application/x-www-form-urlencoded" | "multipart/form-data" | "text/plain") => HTMLElement<"input">;
    "formmethod": (val: "post" | "get" | "dialog") => HTMLElement<"input">;
    "formnovalidate": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "formtarget": (val: DomTypeMap["BrowsingContextNameOrKeyword"]) => HTMLElement<"input">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"input">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"input">;
    "incremental": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"input">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"input">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"input">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"input">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"input">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"input">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"input">;
    "list": (val: DomTypeMap["DOMID"]) => HTMLElement<"input">;
    "max": (val: DomTypeMap[`["DateTime","Number"]`]) => HTMLElement<"input">;
    "maxlength": (val: DomTypeMap["Uint"]) => HTMLElement<"input">;
    "min": (val: DomTypeMap[`["DateTime","Number"]`]) => HTMLElement<"input">;
    "minlength": (val: DomTypeMap["Uint"]) => HTMLElement<"input">;
    "mozactionhint": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "multiple": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"input">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "orient": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "pattern": (val: DomTypeMap["Pattern"]) => HTMLElement<"input">;
    "placeholder": (val: DomTypeMap["OneLineAny"]) => HTMLElement<"input">;
    "readonly": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "required": (val: DomTypeMap["Boolean"]) => HTMLElement<"input">;
    "results": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"input">;
    "size": (val: DomTypeMap[`{"type":"integer","gt":0}`]) => HTMLElement<"input">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"input">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"input">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"input">;
    "step": (val: DomTypeMap[`["Number",{"enum":["any"],"caseInsensitive":true}]`]) => HTMLElement<"input">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"input">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"input">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"input">;
    "type": (val: "hidden" | "text" | "search" | "tel" | "url" | "email" | "password" | "date" | "month" | "week" | "time" | "datetime-local" | "number" | "range" | "color" | "checkbox" | "radio" | "file" | "submit" | "image" | "reset" | "button") => HTMLElement<"input">;
    "value": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "webkitdirectory": (val: DomTypeMap["Any"]) => HTMLElement<"input">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"input">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"input">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"input">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"input">;
    allowedChildren: any;
};
declare type insElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"ins">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"ins">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"ins">;
    "cite": (val: DomTypeMap["URL"]) => HTMLElement<"ins">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"ins">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"ins">;
    "datetime": (val: DomTypeMap["DateTime"]) => HTMLElement<"ins">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"ins">;
    "draggable": (val: "true" | "false") => HTMLElement<"ins">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"ins">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"ins">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"ins">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"ins">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"ins">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"ins">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"ins">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ins">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"ins">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"ins">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ins">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ins">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"ins">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"ins">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"ins">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"ins">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"ins">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"ins">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"ins">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"ins">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ins">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"ins">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"ins">;
    allowedChildren: any;
};
declare type isindexElement = {
    allowedChildren: any;
};
declare type kbdElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"kbd">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"kbd">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"kbd">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"kbd">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"kbd">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"kbd">;
    "draggable": (val: "true" | "false") => HTMLElement<"kbd">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"kbd">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"kbd">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"kbd">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"kbd">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"kbd">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"kbd">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"kbd">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"kbd">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"kbd">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"kbd">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"kbd">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"kbd">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"kbd">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"kbd">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"kbd">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"kbd">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"kbd">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"kbd">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"kbd">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"kbd">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"kbd">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"kbd">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"kbd">;
    allowedChildren: any;
};
declare type keygenElement = {
    "autofocus": (val: DomTypeMap["Any"]) => HTMLElement<"keygen">;
    "challenge": (val: DomTypeMap["Any"]) => HTMLElement<"keygen">;
    "disabled": (val: DomTypeMap["Any"]) => HTMLElement<"keygen">;
    "form": (val: DomTypeMap["Any"]) => HTMLElement<"keygen">;
    "keytype": (val: DomTypeMap["Any"]) => HTMLElement<"keygen">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"keygen">;
    allowedChildren: any;
};
declare type labelElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"label">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"label">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"label">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"label">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"label">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"label">;
    "draggable": (val: "true" | "false") => HTMLElement<"label">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"label">;
    "for": (val: DomTypeMap["DOMID"]) => HTMLElement<"label">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"label">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"label">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"label">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"label">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"label">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"label">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"label">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"label">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"label">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"label">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"label">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"label">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"label">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"label">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"label">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"label">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"label">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"label">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"label">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"label">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"label">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"label">;
    allowedChildren: any;
};
declare type legendElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"legend">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"legend">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"legend">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"legend">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"legend">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"legend">;
    "draggable": (val: "true" | "false") => HTMLElement<"legend">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"legend">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"legend">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"legend">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"legend">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"legend">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"legend">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"legend">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"legend">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"legend">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"legend">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"legend">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"legend">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"legend">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"legend">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"legend">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"legend">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"legend">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"legend">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"legend">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"legend">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"legend">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"legend">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"legend">;
    allowedChildren: any;
};
declare type liElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"li">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"li">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"li">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"li">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"li">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"li">;
    "draggable": (val: "true" | "false") => HTMLElement<"li">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"li">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"li">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"li">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"li">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"li">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"li">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"li">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"li">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"li">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"li">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"li">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"li">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"li">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"li">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"li">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"li">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"li">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"li">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"li">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"li">;
    "type": (val: DomTypeMap["Any"]) => HTMLElement<"li">;
    "value": (val: DomTypeMap["Int"]) => HTMLElement<"li">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"li">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"li">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"li">;
    allowedChildren: any;
};
declare type linkElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"link">;
    "as": (val: "fetch" | "audio" | "audioworklet" | "document" | "embed" | "font" | "frame" | "iframe" | "image" | "manifest" | "object" | "paintworklet" | "report" | "script" | "serviceworker" | "sharedworker" | "style" | "track" | "video" | "worker" | "xslt") => HTMLElement<"link">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"link">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"link">;
    "blocking": (val: "render") => HTMLElement<"link">;
    "charset": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"link">;
    "color": (val: DomTypeMap["<color>"]) => HTMLElement<"link">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"link">;
    "crossorigin": (val: "" | "anonymous" | "use-credentials") => HTMLElement<"link">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"link">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"link">;
    "draggable": (val: "true" | "false") => HTMLElement<"link">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"link">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"link">;
    "href": (val: DomTypeMap["URL"]) => HTMLElement<"link">;
    "hreflang": (val: DomTypeMap["BCP47"]) => HTMLElement<"link">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"link">;
    "imagesizes": (val: DomTypeMap["SourceSizeList"]) => HTMLElement<"link">;
    "imagesrcset": (val: DomTypeMap["Srcset"]) => HTMLElement<"link">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"link">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"link">;
    "integrity": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"link">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"link">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"link">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"link">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"link">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"link">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"link">;
    "media": (val: DomTypeMap["<media-query-list>"]) => HTMLElement<"link">;
    "methods": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "prefetch": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "referrerpolicy": (val: "" | "no-referrer" | "no-referrer-when-downgrade" | "same-origin" | "origin" | "strict-origin" | "origin-when-cross-origin" | "strict-origin-when-cross-origin" | "unsafe-url") => HTMLElement<"link">;
    "rel": (val: DomTypeMap[`["Any",{"token":{"enum":["alternate","canonical","author","dns-prefetch","help","icon","manifest","modulepreload","license","next","pingback","preconnect","prefetch","preload","prerender","prev","search","stylesheet"]},"unique":true,"separator":"space"}]`]) => HTMLElement<"link">;
    "rev": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"link">;
    "sizes": (val: DomTypeMap[`{"token":"IconSize","caseInsensitive":true,"ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"link">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"link">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"link">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"link">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"link">;
    "target": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"link">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"link">;
    "type": (val: DomTypeMap["MIMEType"]) => HTMLElement<"link">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"link">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"link">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"link">;
    allowedChildren: any;
};
declare type listingElement = {
    allowedChildren: any;
};
declare type mainElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"main">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"main">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"main">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"main">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"main">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"main">;
    "draggable": (val: "true" | "false") => HTMLElement<"main">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"main">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"main">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"main">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"main">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"main">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"main">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"main">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"main">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"main">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"main">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"main">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"main">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"main">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"main">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"main">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"main">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"main">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"main">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"main">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"main">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"main">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"main">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"main">;
    allowedChildren: any;
};
declare type mapElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"map">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"map">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"map">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"map">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"map">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"map">;
    "draggable": (val: "true" | "false") => HTMLElement<"map">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"map">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"map">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"map">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"map">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"map">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"map">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"map">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"map">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"map">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"map">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"map">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"map">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"map">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"map">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"map">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"map">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"map">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"map">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"map">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"map">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"map">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"map">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"map">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"map">;
    allowedChildren: any;
};
declare type markElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"mark">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"mark">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"mark">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"mark">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"mark">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"mark">;
    "draggable": (val: "true" | "false") => HTMLElement<"mark">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"mark">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"mark">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"mark">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"mark">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"mark">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"mark">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"mark">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"mark">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"mark">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"mark">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"mark">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"mark">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"mark">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"mark">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"mark">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"mark">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"mark">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"mark">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"mark">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"mark">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"mark">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"mark">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"mark">;
    allowedChildren: any;
};
declare type marqueeElement = {
    "behavior": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "direction": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "height": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "hspace": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "loop": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "scrollamount": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "scrolldelay": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "truespeed": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "vspace": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"marquee">;
    allowedChildren: any;
};
declare type menuElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"menu">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"menu">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"menu">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"menu">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"menu">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"menu">;
    "draggable": (val: "true" | "false") => HTMLElement<"menu">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"menu">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"menu">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"menu">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"menu">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"menu">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"menu">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"menu">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"menu">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"menu">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"menu">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"menu">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"menu">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"menu">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"menu">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"menu">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"menu">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"menu">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"menu">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"menu">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"menu">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"menu">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"menu">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"menu">;
    allowedChildren: any;
};
declare type menuitemElement = {
    "checked": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    "command": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    "default": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    "disabled": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    "icon": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    "label": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    "radiogroup": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    "type": (val: DomTypeMap["Any"]) => HTMLElement<"menuitem">;
    allowedChildren: any;
};
declare type metaElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"meta">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"meta">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"meta">;
    "charset": (val: "utf-8") => HTMLElement<"meta">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"meta">;
    "content": (val: DomTypeMap["Any"]) => HTMLElement<"meta">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"meta">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"meta">;
    "draggable": (val: "true" | "false") => HTMLElement<"meta">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"meta">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"meta">;
    "http-equiv": (val: "content-type" | "default-style" | "refresh" | "x-ua-compatible" | "content-security-policy") => HTMLElement<"meta">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"meta">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"meta">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"meta">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"meta">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"meta">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"meta">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"meta">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"meta">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"meta">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"meta">;
    "media": (val: DomTypeMap["<media-query-list>"]) => HTMLElement<"meta">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"meta">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"meta">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"meta">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"meta">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"meta">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"meta">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"meta">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"meta">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"meta">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"meta">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"meta">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"meta">;
    allowedChildren: any;
};
declare type meterElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"meter">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"meter">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"meter">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"meter">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"meter">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"meter">;
    "draggable": (val: "true" | "false") => HTMLElement<"meter">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"meter">;
    "form": (val: DomTypeMap["Any"]) => HTMLElement<"meter">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"meter">;
    "high": (val: DomTypeMap["Number"]) => HTMLElement<"meter">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"meter">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"meter">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"meter">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"meter">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"meter">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"meter">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"meter">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"meter">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"meter">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"meter">;
    "low": (val: DomTypeMap["Number"]) => HTMLElement<"meter">;
    "max": (val: DomTypeMap["Number"]) => HTMLElement<"meter">;
    "min": (val: DomTypeMap["Number"]) => HTMLElement<"meter">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"meter">;
    "optimum": (val: DomTypeMap["Number"]) => HTMLElement<"meter">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"meter">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"meter">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"meter">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"meter">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"meter">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"meter">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"meter">;
    "value": (val: DomTypeMap["Number"]) => HTMLElement<"meter">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"meter">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"meter">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"meter">;
    allowedChildren: any;
};
declare type multicolElement = {
    allowedChildren: any;
};
declare type navElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"nav">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"nav">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"nav">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"nav">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"nav">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"nav">;
    "draggable": (val: "true" | "false") => HTMLElement<"nav">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"nav">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"nav">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"nav">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"nav">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"nav">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"nav">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"nav">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"nav">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"nav">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"nav">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"nav">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"nav">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"nav">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"nav">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"nav">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"nav">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"nav">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"nav">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"nav">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"nav">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"nav">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"nav">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"nav">;
    allowedChildren: any;
};
declare type nextidElement = {
    allowedChildren: any;
};
declare type nobrElement = {
    allowedChildren: any;
};
declare type noembedElement = {
    allowedChildren: any;
};
declare type noframesElement = {
    allowedChildren: any;
};
declare type noscriptElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"noscript">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"noscript">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"noscript">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"noscript">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"noscript">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"noscript">;
    "draggable": (val: "true" | "false") => HTMLElement<"noscript">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"noscript">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"noscript">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"noscript">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"noscript">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"noscript">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"noscript">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"noscript">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"noscript">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"noscript">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"noscript">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"noscript">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"noscript">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"noscript">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"noscript">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"noscript">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"noscript">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"noscript">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"noscript">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"noscript">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"noscript">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"noscript">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"noscript">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"noscript">;
    allowedChildren: any;
};
declare type objectElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"object">;
    "archive": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"object">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"object">;
    "border": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"object">;
    "classid": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "codebase": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "codetype": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"object">;
    "data": (val: DomTypeMap["URL"]) => HTMLElement<"object">;
    "declare": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"object">;
    "draggable": (val: "true" | "false") => HTMLElement<"object">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"object">;
    "form": (val: DomTypeMap["DOMID"]) => HTMLElement<"object">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"object">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"object">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"object">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"object">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"object">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"object">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"object">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"object">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"object">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"object">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"object">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"object">;
    "name": (val: DomTypeMap["BrowsingContextName"]) => HTMLElement<"object">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"object">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"object">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"object">;
    "standby": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"object">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"object">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"object">;
    "type": (val: DomTypeMap["MIMEType"]) => HTMLElement<"object">;
    "usemap": (val: DomTypeMap["Any"]) => HTMLElement<"object">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"object">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"object">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"object">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"object">;
    allowedChildren: any;
};
declare type olElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"ol">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"ol">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"ol">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"ol">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"ol">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"ol">;
    "draggable": (val: "true" | "false") => HTMLElement<"ol">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"ol">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"ol">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"ol">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"ol">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"ol">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"ol">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"ol">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ol">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"ol">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"ol">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ol">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ol">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"ol">;
    "reversed": (val: DomTypeMap["Boolean"]) => HTMLElement<"ol">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"ol">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"ol">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"ol">;
    "start": (val: DomTypeMap["Int"]) => HTMLElement<"ol">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"ol">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"ol">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"ol">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"ol">;
    "type": (val: "1" | "a" | "A" | "i" | "I") => HTMLElement<"ol">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ol">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"ol">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"ol">;
    allowedChildren: any;
};
declare type optgroupElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"optgroup">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"optgroup">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"optgroup">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"optgroup">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"optgroup">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"optgroup">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"optgroup">;
    "draggable": (val: "true" | "false") => HTMLElement<"optgroup">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"optgroup">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"optgroup">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"optgroup">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"optgroup">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"optgroup">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"optgroup">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"optgroup">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"optgroup">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"optgroup">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"optgroup">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"optgroup">;
    "label": (val: DomTypeMap["Any"]) => HTMLElement<"optgroup">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"optgroup">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"optgroup">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"optgroup">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"optgroup">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"optgroup">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"optgroup">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"optgroup">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"optgroup">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"optgroup">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"optgroup">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"optgroup">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"optgroup">;
    allowedChildren: any;
};
declare type optionElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"option">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"option">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"option">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"option">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"option">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"option">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"option">;
    "draggable": (val: "true" | "false") => HTMLElement<"option">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"option">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"option">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"option">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"option">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"option">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"option">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"option">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"option">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"option">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"option">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"option">;
    "label": (val: DomTypeMap["Any"]) => HTMLElement<"option">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"option">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"option">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"option">;
    "selected": (val: DomTypeMap["Boolean"]) => HTMLElement<"option">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"option">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"option">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"option">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"option">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"option">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"option">;
    "value": (val: DomTypeMap["Any"]) => HTMLElement<"option">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"option">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"option">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"option">;
    allowedChildren: any;
};
declare type outputElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"output">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"output">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"output">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"output">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"output">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"output">;
    "draggable": (val: "true" | "false") => HTMLElement<"output">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"output">;
    "for": (val: DomTypeMap["DOMID"]) => HTMLElement<"output">;
    "form": (val: DomTypeMap["DOMID"]) => HTMLElement<"output">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"output">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"output">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"output">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"output">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"output">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"output">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"output">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"output">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"output">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"output">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"output">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"output">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"output">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"output">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"output">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"output">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"output">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"output">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"output">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"output">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"output">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"output">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"output">;
    allowedChildren: any;
};
declare type pElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"p">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"p">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"p">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"p">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"p">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"p">;
    "draggable": (val: "true" | "false") => HTMLElement<"p">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"p">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"p">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"p">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"p">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"p">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"p">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"p">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"p">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"p">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"p">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"p">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"p">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"p">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"p">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"p">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"p">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"p">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"p">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"p">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"p">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"p">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"p">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"p">;
    allowedChildren: any;
};
declare type paramElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"param">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"param">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"param">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"param">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"param">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"param">;
    "draggable": (val: "true" | "false") => HTMLElement<"param">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"param">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"param">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"param">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"param">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"param">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"param">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"param">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"param">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"param">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"param">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"param">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"param">;
    "name": (val: DomTypeMap["Any"]) => HTMLElement<"param">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"param">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"param">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"param">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"param">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"param">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"param">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"param">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"param">;
    "type": (val: DomTypeMap["Any"]) => HTMLElement<"param">;
    "value": (val: DomTypeMap["Any"]) => HTMLElement<"param">;
    "valuetype": (val: DomTypeMap["Any"]) => HTMLElement<"param">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"param">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"param">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"param">;
    allowedChildren: any;
};
declare type pictureElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"picture">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"picture">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"picture">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"picture">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"picture">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"picture">;
    "draggable": (val: "true" | "false") => HTMLElement<"picture">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"picture">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"picture">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"picture">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"picture">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"picture">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"picture">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"picture">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"picture">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"picture">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"picture">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"picture">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"picture">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"picture">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"picture">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"picture">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"picture">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"picture">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"picture">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"picture">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"picture">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"picture">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"picture">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"picture">;
    allowedChildren: any;
};
declare type plaintextElement = {
    allowedChildren: any;
};
declare type portalElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"portal">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"portal">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"portal">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"portal">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"portal">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"portal">;
    "draggable": (val: "true" | "false") => HTMLElement<"portal">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"portal">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"portal">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"portal">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"portal">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"portal">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"portal">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"portal">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"portal">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"portal">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"portal">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"portal">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"portal">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"portal">;
    "referrerpolicy": (val: "" | "no-referrer" | "no-referrer-when-downgrade" | "same-origin" | "origin" | "strict-origin" | "origin-when-cross-origin" | "strict-origin-when-cross-origin" | "unsafe-url") => HTMLElement<"portal">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"portal">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"portal">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"portal">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"portal">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"portal">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"portal">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"portal">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"portal">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"portal">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"portal">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"portal">;
    allowedChildren: any;
};
declare type preElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"pre">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"pre">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"pre">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"pre">;
    "cols": (val: DomTypeMap["Any"]) => HTMLElement<"pre">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"pre">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"pre">;
    "draggable": (val: "true" | "false") => HTMLElement<"pre">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"pre">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"pre">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"pre">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"pre">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"pre">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"pre">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"pre">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"pre">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"pre">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"pre">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"pre">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"pre">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"pre">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"pre">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"pre">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"pre">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"pre">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"pre">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"pre">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"pre">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"pre">;
    "wrap": (val: DomTypeMap["Any"]) => HTMLElement<"pre">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"pre">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"pre">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"pre">;
    allowedChildren: any;
};
declare type progressElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"progress">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"progress">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"progress">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"progress">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"progress">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"progress">;
    "draggable": (val: "true" | "false") => HTMLElement<"progress">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"progress">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"progress">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"progress">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"progress">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"progress">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"progress">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"progress">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"progress">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"progress">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"progress">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"progress">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"progress">;
    "max": (val: DomTypeMap["Number"]) => HTMLElement<"progress">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"progress">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"progress">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"progress">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"progress">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"progress">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"progress">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"progress">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"progress">;
    "value": (val: DomTypeMap["Number"]) => HTMLElement<"progress">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"progress">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"progress">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"progress">;
    allowedChildren: any;
};
declare type qElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"q">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"q">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"q">;
    "cite": (val: DomTypeMap["URL"]) => HTMLElement<"q">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"q">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"q">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"q">;
    "draggable": (val: "true" | "false") => HTMLElement<"q">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"q">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"q">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"q">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"q">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"q">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"q">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"q">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"q">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"q">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"q">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"q">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"q">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"q">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"q">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"q">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"q">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"q">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"q">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"q">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"q">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"q">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"q">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"q">;
    allowedChildren: any;
};
declare type rbElement = {
    allowedChildren: any;
};
declare type rpElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"rp">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"rp">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"rp">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"rp">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"rp">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"rp">;
    "draggable": (val: "true" | "false") => HTMLElement<"rp">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"rp">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"rp">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"rp">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"rp">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"rp">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"rp">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"rp">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"rp">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"rp">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"rp">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"rp">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"rp">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"rp">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"rp">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"rp">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"rp">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"rp">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"rp">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"rp">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"rp">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"rp">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"rp">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"rp">;
    allowedChildren: any;
};
declare type rtElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"rt">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"rt">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"rt">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"rt">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"rt">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"rt">;
    "draggable": (val: "true" | "false") => HTMLElement<"rt">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"rt">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"rt">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"rt">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"rt">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"rt">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"rt">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"rt">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"rt">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"rt">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"rt">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"rt">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"rt">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"rt">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"rt">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"rt">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"rt">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"rt">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"rt">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"rt">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"rt">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"rt">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"rt">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"rt">;
    allowedChildren: any;
};
declare type rtcElement = {
    allowedChildren: any;
};
declare type rubyElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"ruby">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"ruby">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"ruby">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"ruby">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"ruby">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"ruby">;
    "draggable": (val: "true" | "false") => HTMLElement<"ruby">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"ruby">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"ruby">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"ruby">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"ruby">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"ruby">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"ruby">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"ruby">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ruby">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"ruby">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"ruby">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ruby">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ruby">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"ruby">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"ruby">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"ruby">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"ruby">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"ruby">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"ruby">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"ruby">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"ruby">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ruby">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"ruby">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"ruby">;
    allowedChildren: any;
};
declare type sElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"s">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"s">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"s">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"s">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"s">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"s">;
    "draggable": (val: "true" | "false") => HTMLElement<"s">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"s">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"s">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"s">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"s">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"s">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"s">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"s">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"s">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"s">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"s">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"s">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"s">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"s">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"s">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"s">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"s">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"s">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"s">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"s">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"s">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"s">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"s">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"s">;
    allowedChildren: any;
};
declare type sampElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"samp">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"samp">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"samp">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"samp">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"samp">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"samp">;
    "draggable": (val: "true" | "false") => HTMLElement<"samp">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"samp">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"samp">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"samp">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"samp">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"samp">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"samp">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"samp">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"samp">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"samp">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"samp">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"samp">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"samp">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"samp">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"samp">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"samp">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"samp">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"samp">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"samp">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"samp">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"samp">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"samp">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"samp">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"samp">;
    allowedChildren: any;
};
declare type scriptElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"script">;
    "async": (val: DomTypeMap["Boolean"]) => HTMLElement<"script">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"script">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"script">;
    "blocking": (val: "render") => HTMLElement<"script">;
    "charset": (val: DomTypeMap["Any"]) => HTMLElement<"script">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"script">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"script">;
    "crossorigin": (val: "" | "anonymous" | "use-credentials") => HTMLElement<"script">;
    "defer": (val: DomTypeMap["Boolean"]) => HTMLElement<"script">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"script">;
    "draggable": (val: "true" | "false") => HTMLElement<"script">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"script">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"script">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"script">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"script">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"script">;
    "integrity": (val: DomTypeMap["Any"]) => HTMLElement<"script">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"script">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"script">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"script">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"script">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"script">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"script">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"script">;
    "language": (val: DomTypeMap["Any"]) => HTMLElement<"script">;
    "nomodule": (val: DomTypeMap["Boolean"]) => HTMLElement<"script">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"script">;
    "referrerpolicy": (val: "" | "no-referrer" | "no-referrer-when-downgrade" | "same-origin" | "origin" | "strict-origin" | "origin-when-cross-origin" | "strict-origin-when-cross-origin" | "unsafe-url") => HTMLElement<"script">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"script">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"script">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"script">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"script">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"script">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"script">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"script">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"script">;
    "type": (val: DomTypeMap[`["MIMEType",{"enum":["module"],"caseInsensitive":true}]`]) => HTMLElement<"script">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"script">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"script">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"script">;
    allowedChildren: any;
};
declare type sectionElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"section">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"section">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"section">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"section">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"section">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"section">;
    "draggable": (val: "true" | "false") => HTMLElement<"section">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"section">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"section">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"section">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"section">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"section">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"section">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"section">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"section">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"section">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"section">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"section">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"section">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"section">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"section">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"section">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"section">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"section">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"section">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"section">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"section">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"section">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"section">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"section">;
    allowedChildren: any;
};
declare type selectElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"select">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"select">;
    "autocomplete": (val: DomTypeMap["AutoComplete"]) => HTMLElement<"select">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"select">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"select">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"select">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"select">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"select">;
    "draggable": (val: "true" | "false") => HTMLElement<"select">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"select">;
    "form": (val: DomTypeMap["DOMID"]) => HTMLElement<"select">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"select">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"select">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"select">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"select">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"select">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"select">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"select">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"select">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"select">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"select">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"select">;
    "multiple": (val: DomTypeMap["Boolean"]) => HTMLElement<"select">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"select">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"select">;
    "required": (val: DomTypeMap["Boolean"]) => HTMLElement<"select">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"select">;
    "size": (val: DomTypeMap[`{"type":"integer","gt":0}`]) => HTMLElement<"select">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"select">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"select">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"select">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"select">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"select">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"select">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"select">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"select">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"select">;
    allowedChildren: any;
};
declare type shadowElement = {
    allowedChildren: any;
};
declare type slotElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"slot">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"slot">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"slot">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"slot">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"slot">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"slot">;
    "draggable": (val: "true" | "false") => HTMLElement<"slot">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"slot">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"slot">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"slot">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"slot">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"slot">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"slot">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"slot">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"slot">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"slot">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"slot">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"slot">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"slot">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"slot">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"slot">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"slot">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"slot">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"slot">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"slot">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"slot">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"slot">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"slot">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"slot">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"slot">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"slot">;
    allowedChildren: any;
};
declare type smallElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"small">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"small">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"small">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"small">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"small">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"small">;
    "draggable": (val: "true" | "false") => HTMLElement<"small">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"small">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"small">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"small">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"small">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"small">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"small">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"small">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"small">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"small">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"small">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"small">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"small">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"small">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"small">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"small">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"small">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"small">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"small">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"small">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"small">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"small">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"small">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"small">;
    allowedChildren: any;
};
declare type sourceElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"source">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"source">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"source">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"source">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"source">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"source">;
    "draggable": (val: "true" | "false") => HTMLElement<"source">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"source">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"source">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"source">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"source">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"source">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"source">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"source">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"source">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"source">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"source">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"source">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"source">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"source">;
    "media": (val: DomTypeMap["<media-query-list>"]) => HTMLElement<"source">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"source">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"source">;
    "sizes": (val: DomTypeMap["SourceSizeList"]) => HTMLElement<"source">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"source">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"source">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"source">;
    "srcset": (val: DomTypeMap["Srcset"]) => HTMLElement<"source">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"source">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"source">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"source">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"source">;
    "type": (val: DomTypeMap["MIMEType"]) => HTMLElement<"source">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"source">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"source">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"source">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"source">;
    allowedChildren: any;
};
declare type spacerElement = {
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"spacer">;
    "height": (val: DomTypeMap["Any"]) => HTMLElement<"spacer">;
    "size": (val: DomTypeMap["Any"]) => HTMLElement<"spacer">;
    "type": (val: DomTypeMap["Any"]) => HTMLElement<"spacer">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"spacer">;
    allowedChildren: any;
};
declare type spanElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"span">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"span">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"span">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"span">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"span">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"span">;
    "draggable": (val: "true" | "false") => HTMLElement<"span">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"span">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"span">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"span">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"span">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"span">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"span">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"span">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"span">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"span">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"span">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"span">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"span">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"span">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"span">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"span">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"span">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"span">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"span">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"span">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"span">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"span">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"span">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"span">;
    allowedChildren: any;
};
declare type strikeElement = {
    allowedChildren: any;
};
declare type strongElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"strong">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"strong">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"strong">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"strong">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"strong">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"strong">;
    "draggable": (val: "true" | "false") => HTMLElement<"strong">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"strong">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"strong">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"strong">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"strong">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"strong">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"strong">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"strong">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"strong">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"strong">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"strong">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"strong">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"strong">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"strong">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"strong">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"strong">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"strong">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"strong">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"strong">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"strong">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"strong">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"strong">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"strong">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"strong">;
    allowedChildren: any;
};
declare type styleElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"style">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"style">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"style">;
    "blocking": (val: "render") => HTMLElement<"style">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"style">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"style">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"style">;
    "draggable": (val: "true" | "false") => HTMLElement<"style">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"style">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"style">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"style">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"style">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"style">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"style">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"style">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"style">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"style">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"style">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"style">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"style">;
    "media": (val: DomTypeMap["<media-query-list>"]) => HTMLElement<"style">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"style">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"style">;
    "scoped": (val: DomTypeMap["Any"]) => HTMLElement<"style">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"style">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"style">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"style">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"style">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"style">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"style">;
    "type": (val: DomTypeMap["Any"]) => HTMLElement<"style">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"style">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"style">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"style">;
    allowedChildren: any;
};
declare type subElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"sub">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"sub">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"sub">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"sub">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"sub">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"sub">;
    "draggable": (val: "true" | "false") => HTMLElement<"sub">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"sub">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"sub">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"sub">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"sub">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"sub">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"sub">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"sub">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"sub">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"sub">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"sub">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"sub">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"sub">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"sub">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"sub">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"sub">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"sub">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"sub">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"sub">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"sub">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"sub">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"sub">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"sub">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"sub">;
    allowedChildren: any;
};
declare type summaryElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"summary">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"summary">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"summary">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"summary">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"summary">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"summary">;
    "draggable": (val: "true" | "false") => HTMLElement<"summary">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"summary">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"summary">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"summary">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"summary">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"summary">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"summary">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"summary">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"summary">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"summary">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"summary">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"summary">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"summary">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"summary">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"summary">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"summary">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"summary">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"summary">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"summary">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"summary">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"summary">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"summary">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"summary">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"summary">;
    allowedChildren: any;
};
declare type supElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"sup">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"sup">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"sup">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"sup">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"sup">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"sup">;
    "draggable": (val: "true" | "false") => HTMLElement<"sup">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"sup">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"sup">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"sup">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"sup">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"sup">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"sup">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"sup">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"sup">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"sup">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"sup">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"sup">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"sup">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"sup">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"sup">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"sup">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"sup">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"sup">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"sup">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"sup">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"sup">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"sup">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"sup">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"sup">;
    allowedChildren: any;
};
declare type tableElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"table">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"table">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"table">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "border": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "cellpadding": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "cellspacing": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"table">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"table">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"table">;
    "draggable": (val: "true" | "false") => HTMLElement<"table">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"table">;
    "frame": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"table">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"table">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"table">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"table">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"table">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"table">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"table">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"table">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"table">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"table">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"table">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"table">;
    "rules": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"table">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"table">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"table">;
    "summary": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"table">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"table">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"table">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"table">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"table">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"table">;
    allowedChildren: any;
};
declare type tbodyElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"tbody">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"tbody">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"tbody">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"tbody">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"tbody">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"tbody">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"tbody">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"tbody">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"tbody">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"tbody">;
    "draggable": (val: "true" | "false") => HTMLElement<"tbody">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"tbody">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"tbody">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"tbody">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"tbody">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"tbody">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"tbody">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"tbody">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"tbody">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"tbody">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"tbody">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"tbody">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"tbody">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"tbody">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"tbody">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"tbody">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"tbody">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"tbody">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"tbody">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"tbody">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"tbody">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"tbody">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"tbody">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"tbody">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"tbody">;
    allowedChildren: any;
};
declare type tdElement = {
    "abbr": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"td">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"td">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"td">;
    "axis": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"td">;
    "colspan": (val: DomTypeMap[`{"type":"integer","gt":0,"lte":1000}`]) => HTMLElement<"td">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"td">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"td">;
    "draggable": (val: "true" | "false") => HTMLElement<"td">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"td">;
    "headers": (val: DomTypeMap[`{"token":"DOMID","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"td">;
    "height": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"td">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"td">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"td">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"td">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"td">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"td">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"td">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"td">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"td">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"td">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"td">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"td">;
    "rowspan": (val: DomTypeMap[`{"type":"integer","gt":0,"lte":65534}`]) => HTMLElement<"td">;
    "scope": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"td">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"td">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"td">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"td">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"td">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"td">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"td">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"td">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"td">;
    allowedChildren: any;
};
declare type templateElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"template">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"template">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"template">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"template">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"template">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"template">;
    "draggable": (val: "true" | "false") => HTMLElement<"template">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"template">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"template">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"template">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"template">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"template">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"template">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"template">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"template">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"template">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"template">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"template">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"template">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"template">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"template">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"template">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"template">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"template">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"template">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"template">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"template">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"template">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"template">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"template">;
    allowedChildren: any;
};
declare type textareaElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"textarea">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"textarea">;
    "autocomplete": (val: DomTypeMap["AutoComplete"]) => HTMLElement<"textarea">;
    "autocorrect": (val: DomTypeMap["Any"]) => HTMLElement<"textarea">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"textarea">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"textarea">;
    "cols": (val: DomTypeMap[`{"type":"integer","gt":0}`]) => HTMLElement<"textarea">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"textarea">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"textarea">;
    "dirname": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"textarea">;
    "disabled": (val: DomTypeMap["Boolean"]) => HTMLElement<"textarea">;
    "draggable": (val: "true" | "false") => HTMLElement<"textarea">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"textarea">;
    "form": (val: DomTypeMap["DOMID"]) => HTMLElement<"textarea">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"textarea">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"textarea">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"textarea">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"textarea">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"textarea">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"textarea">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"textarea">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"textarea">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"textarea">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"textarea">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"textarea">;
    "maxlength": (val: DomTypeMap["Uint"]) => HTMLElement<"textarea">;
    "minlength": (val: DomTypeMap["Uint"]) => HTMLElement<"textarea">;
    "name": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"textarea">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"textarea">;
    "placeholder": (val: DomTypeMap["Any"]) => HTMLElement<"textarea">;
    "readonly": (val: DomTypeMap["Boolean"]) => HTMLElement<"textarea">;
    "required": (val: DomTypeMap["Boolean"]) => HTMLElement<"textarea">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"textarea">;
    "rows": (val: DomTypeMap[`{"type":"integer","gt":0}`]) => HTMLElement<"textarea">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"textarea">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"textarea">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"textarea">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"textarea">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"textarea">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"textarea">;
    "wrap": (val: "soft" | "hard") => HTMLElement<"textarea">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"textarea">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"textarea">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"textarea">;
    allowedChildren: any;
};
declare type tfootElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"tfoot">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"tfoot">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"tfoot">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"tfoot">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"tfoot">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"tfoot">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"tfoot">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"tfoot">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"tfoot">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"tfoot">;
    "draggable": (val: "true" | "false") => HTMLElement<"tfoot">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"tfoot">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"tfoot">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"tfoot">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"tfoot">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"tfoot">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"tfoot">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"tfoot">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"tfoot">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"tfoot">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"tfoot">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"tfoot">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"tfoot">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"tfoot">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"tfoot">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"tfoot">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"tfoot">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"tfoot">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"tfoot">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"tfoot">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"tfoot">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"tfoot">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"tfoot">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"tfoot">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"tfoot">;
    allowedChildren: any;
};
declare type thElement = {
    "abbr": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"th">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"th">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"th">;
    "axis": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"th">;
    "colspan": (val: DomTypeMap[`{"type":"integer","gt":0,"lte":1000}`]) => HTMLElement<"th">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"th">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"th">;
    "draggable": (val: "true" | "false") => HTMLElement<"th">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"th">;
    "headers": (val: DomTypeMap[`{"token":"DOMID","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"th">;
    "height": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"th">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"th">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"th">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"th">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"th">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"th">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"th">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"th">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"th">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"th">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"th">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"th">;
    "rowspan": (val: DomTypeMap[`{"type":"integer","gt":0,"lte":65534}`]) => HTMLElement<"th">;
    "scope": (val: "row" | "col" | "rowgroup" | "colgroup") => HTMLElement<"th">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"th">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"th">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"th">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"th">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"th">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "width": (val: DomTypeMap["Any"]) => HTMLElement<"th">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"th">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"th">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"th">;
    allowedChildren: any;
};
declare type theadElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"thead">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"thead">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"thead">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"thead">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"thead">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"thead">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"thead">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"thead">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"thead">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"thead">;
    "draggable": (val: "true" | "false") => HTMLElement<"thead">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"thead">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"thead">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"thead">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"thead">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"thead">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"thead">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"thead">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"thead">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"thead">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"thead">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"thead">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"thead">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"thead">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"thead">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"thead">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"thead">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"thead">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"thead">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"thead">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"thead">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"thead">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"thead">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"thead">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"thead">;
    allowedChildren: any;
};
declare type timeElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"time">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"time">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"time">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"time">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"time">;
    "datetime": (val: DomTypeMap["DateTime"]) => HTMLElement<"time">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"time">;
    "draggable": (val: "true" | "false") => HTMLElement<"time">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"time">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"time">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"time">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"time">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"time">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"time">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"time">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"time">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"time">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"time">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"time">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"time">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"time">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"time">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"time">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"time">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"time">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"time">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"time">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"time">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"time">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"time">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"time">;
    allowedChildren: any;
};
declare type titleElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"title">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"title">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"title">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"title">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"title">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"title">;
    "draggable": (val: "true" | "false") => HTMLElement<"title">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"title">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"title">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"title">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"title">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"title">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"title">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"title">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"title">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"title">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"title">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"title">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"title">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"title">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"title">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"title">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"title">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"title">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"title">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"title">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"title">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"title">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"title">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"title">;
    allowedChildren: any;
};
declare type trElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"tr">;
    "align": (val: DomTypeMap["Any"]) => HTMLElement<"tr">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"tr">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"tr">;
    "bgcolor": (val: DomTypeMap["Any"]) => HTMLElement<"tr">;
    "char": (val: DomTypeMap["Any"]) => HTMLElement<"tr">;
    "charoff": (val: DomTypeMap["Any"]) => HTMLElement<"tr">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"tr">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"tr">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"tr">;
    "draggable": (val: "true" | "false") => HTMLElement<"tr">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"tr">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"tr">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"tr">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"tr">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"tr">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"tr">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"tr">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"tr">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"tr">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"tr">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"tr">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"tr">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"tr">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"tr">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"tr">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"tr">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"tr">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"tr">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"tr">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"tr">;
    "valign": (val: DomTypeMap["Any"]) => HTMLElement<"tr">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"tr">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"tr">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"tr">;
    allowedChildren: any;
};
declare type trackElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"track">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"track">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"track">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"track">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"track">;
    "default": (val: DomTypeMap["Boolean"]) => HTMLElement<"track">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"track">;
    "draggable": (val: "true" | "false") => HTMLElement<"track">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"track">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"track">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"track">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"track">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"track">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"track">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"track">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"track">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"track">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"track">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"track">;
    "kind": (val: "subtitles" | "captions" | "descriptions" | "chapters" | "metadata") => HTMLElement<"track">;
    "label": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"track">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"track">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"track">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"track">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"track">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"track">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"track">;
    "srclang": (val: DomTypeMap["BCP47"]) => HTMLElement<"track">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"track">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"track">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"track">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"track">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"track">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"track">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"track">;
    allowedChildren: any;
};
declare type ttElement = {
    allowedChildren: any;
};
declare type uElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"u">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"u">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"u">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"u">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"u">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"u">;
    "draggable": (val: "true" | "false") => HTMLElement<"u">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"u">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"u">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"u">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"u">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"u">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"u">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"u">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"u">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"u">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"u">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"u">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"u">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"u">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"u">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"u">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"u">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"u">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"u">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"u">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"u">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"u">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"u">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"u">;
    allowedChildren: any;
};
declare type ulElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"ul">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"ul">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"ul">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"ul">;
    "compact": (val: DomTypeMap["Any"]) => HTMLElement<"ul">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"ul">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"ul">;
    "draggable": (val: "true" | "false") => HTMLElement<"ul">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"ul">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"ul">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"ul">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"ul">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"ul">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"ul">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"ul">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ul">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"ul">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"ul">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"ul">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ul">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"ul">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"ul">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"ul">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"ul">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"ul">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"ul">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"ul">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"ul">;
    "type": (val: DomTypeMap["Any"]) => HTMLElement<"ul">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"ul">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"ul">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"ul">;
    allowedChildren: any;
};
declare type varElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"var">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"var">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"var">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"var">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"var">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"var">;
    "draggable": (val: "true" | "false") => HTMLElement<"var">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"var">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"var">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"var">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"var">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"var">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"var">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"var">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"var">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"var">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"var">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"var">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"var">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"var">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"var">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"var">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"var">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"var">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"var">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"var">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"var">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"var">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"var">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"var">;
    allowedChildren: any;
};
declare type videoElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"video">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"video">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "autopictureinpicture": (val: DomTypeMap["Any"]) => HTMLElement<"video">;
    "autoplay": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"video">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"video">;
    "controls": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "controlslist": (val: DomTypeMap[`{"token":{"enum":["nodownload","nofullscreen","noremoteplayback"]},"ordered":false,"caseInsensitive":true,"unique":true,"separator":"space"}`]) => HTMLElement<"video">;
    "crossorigin": (val: "" | "anonymous" | "use-credentials") => HTMLElement<"video">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"video">;
    "disablepictureinpicture": (val: DomTypeMap["Any"]) => HTMLElement<"video">;
    "disableremoteplayback": (val: DomTypeMap["Any"]) => HTMLElement<"video">;
    "draggable": (val: "true" | "false") => HTMLElement<"video">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"video">;
    "height": (val: DomTypeMap["Uint"]) => HTMLElement<"video">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"video">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"video">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"video">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"video">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"video">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"video">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"video">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"video">;
    "loop": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "muted": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"video">;
    "playsinline": (val: DomTypeMap["Boolean"]) => HTMLElement<"video">;
    "poster": (val: DomTypeMap["URL"]) => HTMLElement<"video">;
    "preload": (val: "none" | "metadata" | "auto") => HTMLElement<"video">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"video">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"video">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"video">;
    "src": (val: DomTypeMap["URL"]) => HTMLElement<"video">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"video">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"video">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"video">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"video">;
    "width": (val: DomTypeMap["Uint"]) => HTMLElement<"video">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"video">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"video">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"video">;
    allowedChildren: any;
};
declare type wbrElement = {
    "accesskey": (val: DomTypeMap[`{"token":"OneCodePointChar","ordered":true,"unique":true,"number":"zeroOrMore","separator":"space"}`]) => HTMLElement<"wbr">;
    "autocapitalize": (val: "off" | "on" | "none" | "sentences" | "words" | "characters") => HTMLElement<"wbr">;
    "autofocus": (val: DomTypeMap["Boolean"]) => HTMLElement<"wbr">;
    "class": (val: DomTypeMap["<class-list>"]) => HTMLElement<"wbr">;
    "contenteditable": (val: "" | "true" | "false") => HTMLElement<"wbr">;
    "dir": (val: "ltr" | "rtl" | "auto") => HTMLElement<"wbr">;
    "draggable": (val: "true" | "false") => HTMLElement<"wbr">;
    "enterkeyhint": (val: "enter" | "done" | "go" | "next" | "previous" | "search" | "send") => HTMLElement<"wbr">;
    "hidden": (val: DomTypeMap["Boolean"]) => HTMLElement<"wbr">;
    "id": (val: DomTypeMap["DOMID"]) => HTMLElement<"wbr">;
    "inert": (val: DomTypeMap["Boolean"]) => HTMLElement<"wbr">;
    "inputmode": (val: "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" | "search") => HTMLElement<"wbr">;
    "is": (val: DomTypeMap["CustomElementName"]) => HTMLElement<"wbr">;
    "itemid": (val: DomTypeMap["URL"]) => HTMLElement<"wbr">;
    "itemprop": (val: DomTypeMap[`{"token":"ItemProp","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"wbr">;
    "itemref": (val: DomTypeMap[`{"token":"DOMID","separator":"space"}`]) => HTMLElement<"wbr">;
    "itemscope": (val: DomTypeMap["Boolean"]) => HTMLElement<"wbr">;
    "itemtype": (val: DomTypeMap[`{"token":"AbsoluteURL","ordered":false,"unique":true,"separator":"space"}`]) => HTMLElement<"wbr">;
    "lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"wbr">;
    "nonce": (val: DomTypeMap["Any"]) => HTMLElement<"wbr">;
    "role": (val: DomTypeMap[`{"token":"NoEmptyAny","separator":"space"}`]) => HTMLElement<"wbr">;
    "slot": (val: DomTypeMap["NoEmptyAny"]) => HTMLElement<"wbr">;
    "spellcheck": (val: "" | "true" | "false") => HTMLElement<"wbr">;
    "style": (val: DomTypeMap["<css-declaration-list>"]) => HTMLElement<"wbr">;
    "tabindex": (val: DomTypeMap["TabIndex"]) => HTMLElement<"wbr">;
    "title": (val: DomTypeMap["Any"]) => HTMLElement<"wbr">;
    "translate": (val: "" | "yes" | "no") => HTMLElement<"wbr">;
    "xml:lang": (val: DomTypeMap["BCP47"]) => HTMLElement<"wbr">;
    "xml:space": (val: "default" | "preserve") => HTMLElement<"wbr">;
    "xmlns": (val: DomTypeMap["URL"]) => HTMLElement<"wbr">;
    allowedChildren: any;
};
declare type xmpElement = {
    allowedChildren: any;
};
export {};
